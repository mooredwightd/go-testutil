use 'godoc cmd/testutil' for documentation on the testutil command 

PACKAGE DOCUMENTATION

package testutil
    import "testutil"

    The testutil package provides an assertion framework for unit testing.
    The package assumes these are executed in the context of gotest, and the
    first parameter of each method is the *testing.T parameter of the test
    method. If any assertion fails, the assertion calls t.Fatalf(), logs the
    message, and terminates the test method.

FUNCTIONS

func AssertEmptyString(t *testing.T, v string, format string, a ...interface{})
    Assert a string value is equal to the empty string (""). The method
    takes the *testing.T from the test method, the value to be asserted, and
    a message printed if the assertion fails. The "format" and "a" variadic
    parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertEqual(t *testing.T, v1 interface{}, v2 interface{}, format string, a ...interface{})
    Assert that two values are equal. The method takes the *testing.T from
    the test method, the values to be asserted, and a message printed if the
    assertion fails. The "format" and "a" variadic parameters conform the
    the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertFalse(t *testing.T, b bool, format string, a ...interface{})
    Assert a value evaluates to false The method takes the *testing.T from
    the test method, the value to be asserted, and a message printed if the
    assertion fails. The "format" and "a" variadic parameters conform the
    the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertFalseFunc(t *testing.T, v interface{}, f func(x interface{}) bool, format string, a ...interface{})
    Assert the a function that accepts a parameter (v) returns false. The
    method takes the *testing.T from the test method, the value to be
    asserted, and a message printed if the assertion fails. The "format" and
    "a" variadic parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertGreaterThan(t *testing.T, v1 interface{}, v2 interface{}, format string, a ...interface{})
    Assert the first value (v1) is numerically greater than the second value
    (v2). The method takes the *testing.T from the test method, the values
    to be asserted, and a message printed if the assertion fails. The
    "format" and "a" variadic parameters conform the the fmt.Fatalf()
    method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertGreaterThanOrEqual(t *testing.T, v1 interface{}, v2 interface{}, format string, a ...interface{})
    Assert the first value (v1) is greater-than-or-equal-to the second value
    (v2) The method takes the *testing.T from the test method, the value to
    be asserted, and a message printed if the assertion fails. The "format"
    and "a" variadic parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertLessThan(t *testing.T, v1 interface{}, v2 interface{}, format string, a ...interface{})
    Assert the first value (v1) is less-than the second value (v2) The
    method takes the *testing.T from the test method, the value to be
    asserted, and a message printed if the assertion fails. The "format" and
    "a" variadic parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertLessThanOrEqual(t *testing.T, v1 interface{}, v2 interface{}, format string, a ...interface{})
    Assert the first value (v1) is less-than-or-equal-to the second value
    (v2) The method takes the *testing.T from the test method, the value to
    be asserted, and a message printed if the assertion fails. The "format"
    and "a" variadic parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertNil(t *testing.T, v interface{}, format string, a ...interface{})
    Assert a value is nil. The method takes the *testing.T from the test
    method, the value to be asserted as nil, and a message printed if the
    assertion fails. The "format" and "a" variadic parameters conform the
    the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertNotEmptyString(t *testing.T, v string, format string, a ...interface{})
    Assert a string value is NOT equal to the empty string. The method takes
    the *testing.T from the test method, the value to be asserted, and a
    message printed if the assertion fails. The "format" and "a" variadic
    parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertNotNil(t *testing.T, v interface{}, format string, a ...interface{})
    Assert a value is NOT nil. The method takes the *testing.T from the test
    method, the value to be asserted as NOT nil, and a message printed if
    the assertion fails. The "format" and "a" variadic parameters conform
    the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertStringsEqual(t *testing.T, v1 string, v2 string, format string, a ...interface{})
    Assert two strings are equivalent, i.e. have the string
    characters/runes. The method takes the *testing.T from the test method,
    the two strings to be asserted, and a message printed if the assertion
    fails. The "format" and "a" variadic parameters conform the the
    fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertStringsNotEqual(t *testing.T, v1 string, v2 string, format string, a ...interface{})
    Assert two strinsg are NOT equivalent, i.e. the string values are not
    the same. The method takes the *testing.T from the test method, the
    value to be asserted, and a message printed if the assertion fails. The
    "format" and "a" variadic parameters conform the the fmt.Fatalf()
    method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertTextInFiles(t *testing.T, fileMap map[int]string, needle string) (found bool)
    Assert a given string is found in a list of files provided as a
    map[int]string. The method takes the *testing.T from the test method,
    the value to be asserted, and a message printed if the assertion fails.
    The "format" and "a" variadic parameters conform the the fmt.Fatalf()
    method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertTextNotInFiles(t *testing.T, fileMap map[int]string, needle string) (found bool)
    Assert a given string is NOT found in a list of files provided as a
    map[int]string. The method takes the *testing.T from the test method,
    the value to be asserted, and a message printed if the assertion fails.
    The "format" and "a" variadic parameters conform the the fmt.Fatalf()
    method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertTrue(t *testing.T, b bool, format string, a ...interface{})
    Assert a value evaluates to true The method takes the *testing.T from
    the test method, the value to be asserted, and a message printed if the
    assertion fails. The "format" and "a" variadic parameters conform the
    the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.

func AssertTrueFunc(t *testing.T, v interface{}, f func(x interface{}) bool, format string, a ...interface{})
    Assert the a function that accepts a parameter (v) returns true. The
    method takes the *testing.T from the test method, the value to be
    asserted, and a message printed if the assertion fails. The "format" and
    "a" variadic parameters conform the the fmt.Fatalf() method.

    If the assertion fails, t.Fatalf() is called terminating the test
    script.


